import numpy
import pandas as pd
import csv
from sklearn.preprocessing import LabelEncoder, OneHotEncoder

from keras.utils import to_categorical
def csv2numpy(csv_in):
    '''
    Parses a CSV input file and returns a tuple (X, y) with
    training vectors (numpy.array) and labels (numpy.array), respectfully.

    csv_in - name of a CSV file with training data points;
                the first column in the file is supposed to be named
                'class' and should contain the class label for the data
                points; the second column of this file will be ignored
                (put data point ID here).
    '''
    # 解析CSV输入文件，并返回一个元组（X，y），分别包含训练向量（numpy.array）和标签（numpy.array）。
    # 文件中的第一列应该命名为'class'    此文件的第二列将被忽略（将数据点ID放在此处）。

    # Parse CSV file
    # 读取每一行

    numpy.set_printoptions(threshold=numpy.inf)
    csv_rows = list(csv.reader(open(csv_in, 'r', encoding="utf-8")))
    classes = {'FALSE': 0, 'TRUE': 1}
    rownum = 0
    # Count exact number of data points
    # 计算数据点的确切数量  TOTAL_ROWS数据总行数
    TOTAL_ROWS = 0
    for row in csv_rows:
        if row[0] in classes:
            # Count line if it begins with a class label (boolean)
            TOTAL_ROWS += 1
    # X = vector of data points, y = label vector
    # X表示特征向量  y表示标签向量
    X = numpy.array(numpy.zeros((TOTAL_ROWS, 135)), dtype=numpy.float64, order='C')
    y = numpy.array(numpy.zeros(TOTAL_ROWS), dtype=numpy.float64, order='C')
    # print("this is X:",X)
    file_names = []
    for row in csv_rows:
        # Skip line if it doesn't begin with a class label (boolean)
        if row[0] not in classes:
            continue
        # Read class label from first row
        # 读取第一行数据，y[0]=0或者1
        y[rownum] = classes[row[0]]
        featnum = 0
        # 文件名存放位置file_names
        file_names.append(row[1])
        # 从三列开始是特征
        for featval in row[2:]:
            if featval in classes:
                # Convert booleans to integers
                featval = classes[featval]
            # X[0,0]表示第1行的第1个特征向量  X[0,1]...X[0,134]表示第1行的第2个特征
            X[rownum, featnum] = featval
            featnum += 1
        # 开始第二行
        rownum += 1
    # 返回每行的特征的向量表示  标签  文件名列表
    print(X.shape)
    print(y.shape)

    # pddata = pd.DataFrame(X)
    # new_data = pd.get_dummies(pddata)
    # # new_data = new_data.values
    # res=to_array(X, 1267813356)
    # print("this is new data:",res)
    return X, y, file_names


def to_array(a, col):
    for i in range(len(a)):
        # 假如col=5，那么这里把形如[0,1,2]通过one-hot编码成：
        # [[1,0,0,0,0]
        # [0,1,0,0,0]
        # [0,0,1,0,0]]
        a[i] = to_categorical(numpy.array(a[i]), num_classes=col)

        # numpy矩阵（数组）的各个行的对应元素相加。把形如：
        # [[1,0,0,0,0]
        #  [0,1,0,0,0]
        #  [0,0,1,0,0]]
        # 的numpy矩阵（数组）相加后变成：
        #  [1,1,1,0,0]
        a[i] = numpy.sum(a[i], axis=0)

    return a